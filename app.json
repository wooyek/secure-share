{
  "name": "Secure Share demo",
  "description": "A test project for job application",
  "keywords": [
    "Python",
    "Django"
  ],
  "website": "git@github.com:wooyek/secure-share.git",
  "repository": "git@github.com:wooyek/secure-share.git",
  "addons": [
    "heroku-postgresql:hobby-dev",
    "cloudinary:starter"
  ],
  "scripts": {
    "postdeploy": "bin/post_deploy",
    "dokku": {
      "predeploy": "chmod +x bin/post_deploy && bin/post_deploy",
      "postdeploy": "chmod +x bin/post_deploy && bin/post_deploy"
    }
  },
  "formation": {
    "web": {
      "quantity": 1,
      "size": "free"
    }
  },
  "env": {
    "AUTO_MIGRATE": {
      "description": "Allows to run migrate on every deploy or a release.",
      "value": "True"
    },
    "CREATE_SUPER_USER": {
      "description": "This will auto create a super user if no users are present. This won't work if auto migrations is off",
      "value": "admin:me@example.com:P@$Sw0rd",
      "required": false
    },
    "SECRET_KEY": {
      "description": "A secret key for a particular Django installation. This is used to provide cryptographic signing.",
      "generator": "secret"
    },
    "DEBUG": {
      "description": "Leave DEBUG on for demo purposes. Set it to False to secure your app from the first start.",
      "value": "True"
    },
    "ALLOWED_HOSTS": {
      "description": "Domain names this is working under, first one will be used as a base for emails used in settings",
      "value": "secure-share.herokuapp.com .herokuapp.com"
    },
    "EMAIL_URL": {
      "description": "SMTP setting in the form of smtp+tls://user:password@example.com:587",
      "value": "smtp+tls://SMTP_Injection:c8abd8f15dd60e5dadd0ed8a067db4bdd89dd6b5@smtp.sparkpostmail.com:587",
      "required": false
    },
    "UPGRADE_REQUIREMENTS": {
      "description": "We need to workaround some heroku limitations and install example_project requirements",
      "value": "False"
    },
    "DISABLE_COLLECTSTATIC": {
      "description": "Controls if Heroku should collect any static files. This won't work with example_project.",
      "value": "1"
    },
    "APP_COLLECTSTATIC": {
      "description": "Make project collect statics on it'sown.",
      "value": "False",
      "required": false
    },
    "DJANGO_SETTINGS_MODULE": {
      "description": "Point to an settings module in example_project",
      "value": "website.settings.production"
    },
    "SPARKPOST_API_KEY": {
      "description": "Provide this key if you want to test SparkPost integration.",
      "value": "",
      "required": false
    },
    "DEFAULT_FROM_EMAIL": {
      "description": "Default email address to use for various automated correspondence from the site manager(s). This doesn’t include error messages sent to ADMINS and MANAGERS; for that, see SERVER_EMAIL.\n\n https://docs.djangoproject.com/en/2.2/ref/settings/#default-from-email",
      "value": "No reply <no-reply@example.com>",
      "required": true
    },
    "DEFAULT_REPLY_TO_EMAIL": {
      "description": "Default email your users should reply to when looking for help",
      "value": "Help <help@netguru-secure-share.tk>",
      "required": true
    },
    "SERVER_EMAIL": {
      "description": "The email address that error messages come from, such as those sent to ADMINS and MANAGERS.",
      "value": "Errors <err@netguru-secure-share.tk>",
      "required": true
    },
    "EMAIL_QUEUE_EAGER": {
      "description": "Do not queue emails, send them immediately",
      "value": "True",
      "required": false
    },
    "EMAIL_SUBJECT_PREFIX": {
      "description": "Subject-line prefix for email messages sent with django.core.mail.mail_admins or django.core.mail.mail_managers. You’ll probably want to include the trailing space. https://docs.djangoproject.com/en/2.2/ref/settings/#email-subject-prefix",
      "value": "[Secure Share]",
      "required": false
    }
  }
}
